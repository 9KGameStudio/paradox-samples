// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using SiliconStudio.Paradox.Graphics;


#line 1 "C:\Paradox\paradox\samples2\Games\SpaceEscape\SpaceEscape.Game\Effects\SpaceEscapeEffectMain.pdxfx"
using SiliconStudio.Paradox.Effects.Data;

#line 3
namespace SpaceEscape.Effects
{
    [DataContract]
#line 5
    public partial class GameParameters : ShaderMixinParameters
    {

        #line 7
        public static readonly ParameterKey<bool> EnableFog = ParameterKeys.New<bool>(true);

        #line 8
        public static readonly ParameterKey<bool> EnableBend = ParameterKeys.New<bool>(true);

        #line 9
        public static readonly ParameterKey<bool> EnableOnflyTextureUVChange = ParameterKeys.New<bool>(false);
    };

    #line 12
    public partial class SpaceEscapeEffectMain  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 19
            context.Mixin(mixin, "ShaderBase");

            #line 20
            context.Mixin(mixin, "TransformationWAndVP");

            #line 21
            context.Mixin(mixin, "BRDFDiffuseBase");

            #line 22
            context.Mixin(mixin, "BRDFSpecularBase");

            #line 23
            context.Mixin(mixin, "AlbedoFlatShading");

            #line 25
            if (context.GetParam(MaterialParameters.AlbedoDiffuse) != null)

                {

                    #line 26
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 26
                    context.Mixin(__subMixin, context.GetParam(MaterialParameters.AlbedoDiffuse));
                    mixin.Mixin.AddComposition("albedoDiffuse", __subMixin.Mixin);
                }

            #line 28
            if (context.GetParam(GameParameters.EnableOnflyTextureUVChange))

                #line 29
                context.Mixin(mixin, "TransformationTextureUV");

            #line 31
            if (context.GetParam(MaterialParameters.HasSkinningPosition))
            {

                #line 33
                mixin.Mixin.AddMacro("SkinningMaxBones", context.GetParam(MaterialParameters.SkinningMaxBones));

                #line 34
                context.Mixin(mixin, "TransformationSkinning");
            }

            #line 37
            if (context.GetParam(GameParameters.EnableBend))
            {

                #line 39
                context.Mixin(mixin, "TransformationBendWorld");
            }

            #line 42
            if (context.GetParam(GameParameters.EnableFog))
            {

                #line 44
                context.Mixin(mixin, "FogEffect");
            }
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("SpaceEscapeEffectMain", new SpaceEscapeEffectMain());
        }
    }
}
